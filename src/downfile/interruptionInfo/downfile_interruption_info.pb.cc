// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: downfile_interruption_info.proto

#include "downfile_interruption_info.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace downfile {
namespace interruption {
PROTOBUF_CONSTEXPR SingleBlockInfo::SingleBlockInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.startpos_)*/uint64_t{0u}} {}
struct SingleBlockInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SingleBlockInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SingleBlockInfoDefaultTypeInternal() {}
  union {
    SingleBlockInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SingleBlockInfoDefaultTypeInternal _SingleBlockInfo_default_instance_;
PROTOBUF_CONSTEXPR DownfileInterruptionInfo::DownfileInterruptionInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.info_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.hasdownloadedsize_)*/uint64_t{0u}
  , /*decltype(_impl_.totalsize_)*/uint64_t{0u}
  , /*decltype(_impl_.isfinish_)*/false} {}
struct DownfileInterruptionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DownfileInterruptionInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DownfileInterruptionInfoDefaultTypeInternal() {}
  union {
    DownfileInterruptionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DownfileInterruptionInfoDefaultTypeInternal _DownfileInterruptionInfo_default_instance_;
}  // namespace interruption
}  // namespace downfile
static ::_pb::Metadata file_level_metadata_downfile_5finterruption_5finfo_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_downfile_5finterruption_5finfo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_downfile_5finterruption_5finfo_2eproto = nullptr;

const uint32_t TableStruct_downfile_5finterruption_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::SingleBlockInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::SingleBlockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::SingleBlockInfo, _impl_.startpos_),
  0,
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_.info_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_.hash_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_.hasdownloadedsize_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_.totalsize_),
  PROTOBUF_FIELD_OFFSET(::downfile::interruption::DownfileInterruptionInfo, _impl_.isfinish_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::downfile::interruption::SingleBlockInfo)},
  { 8, 20, -1, sizeof(::downfile::interruption::DownfileInterruptionInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::downfile::interruption::_SingleBlockInfo_default_instance_._instance,
  &::downfile::interruption::_DownfileInterruptionInfo_default_instance_._instance,
};

const char descriptor_table_protodef_downfile_5finterruption_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n downfile_interruption_info.proto\022\025down"
  "file.interruption\"#\n\017SingleBlockInfo\022\020\n\010"
  "startPos\030\001 \002(\004\"\271\001\n\030DownfileInterruptionI"
  "nfo\0224\n\004info\030\001 \003(\0132&.downfile.interruptio"
  "n.SingleBlockInfo\022\014\n\004name\030\002 \002(\014\022\014\n\004hash\030"
  "\003 \002(\014\022\034\n\021hasDownloadedSize\030\004 \002(\004:\0010\022\024\n\tt"
  "otalSize\030\005 \002(\004:\0010\022\027\n\010isfinish\030\006 \002(\010:\005fal"
  "seB\002H\002"
  ;
static ::_pbi::once_flag descriptor_table_downfile_5finterruption_5finfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_downfile_5finterruption_5finfo_2eproto = {
    false, false, 286, descriptor_table_protodef_downfile_5finterruption_5finfo_2eproto,
    "downfile_interruption_info.proto",
    &descriptor_table_downfile_5finterruption_5finfo_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_downfile_5finterruption_5finfo_2eproto::offsets,
    file_level_metadata_downfile_5finterruption_5finfo_2eproto, file_level_enum_descriptors_downfile_5finterruption_5finfo_2eproto,
    file_level_service_descriptors_downfile_5finterruption_5finfo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_downfile_5finterruption_5finfo_2eproto_getter() {
  return &descriptor_table_downfile_5finterruption_5finfo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_downfile_5finterruption_5finfo_2eproto(&descriptor_table_downfile_5finterruption_5finfo_2eproto);
namespace downfile {
namespace interruption {

// ===================================================================

class SingleBlockInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SingleBlockInfo>()._impl_._has_bits_);
  static void set_has_startpos(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SingleBlockInfo::SingleBlockInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:downfile.interruption.SingleBlockInfo)
}
SingleBlockInfo::SingleBlockInfo(const SingleBlockInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SingleBlockInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.startpos_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.startpos_ = from._impl_.startpos_;
  // @@protoc_insertion_point(copy_constructor:downfile.interruption.SingleBlockInfo)
}

inline void SingleBlockInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.startpos_){uint64_t{0u}}
  };
}

SingleBlockInfo::~SingleBlockInfo() {
  // @@protoc_insertion_point(destructor:downfile.interruption.SingleBlockInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SingleBlockInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SingleBlockInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SingleBlockInfo::InternalSwap(SingleBlockInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata SingleBlockInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_downfile_5finterruption_5finfo_2eproto_getter, &descriptor_table_downfile_5finterruption_5finfo_2eproto_once,
      file_level_metadata_downfile_5finterruption_5finfo_2eproto[0]);
}

// ===================================================================

class DownfileInterruptionInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<DownfileInterruptionInfo>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hasdownloadedsize(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_totalsize(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_isfinish(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

DownfileInterruptionInfo::DownfileInterruptionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:downfile.interruption.DownfileInterruptionInfo)
}
DownfileInterruptionInfo::DownfileInterruptionInfo(const DownfileInterruptionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DownfileInterruptionInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){from._impl_.info_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.hash_){}
    , decltype(_impl_.hasdownloadedsize_){}
    , decltype(_impl_.totalsize_){}
    , decltype(_impl_.isfinish_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_hash()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.hasdownloadedsize_, &from._impl_.hasdownloadedsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isfinish_) -
    reinterpret_cast<char*>(&_impl_.hasdownloadedsize_)) + sizeof(_impl_.isfinish_));
  // @@protoc_insertion_point(copy_constructor:downfile.interruption.DownfileInterruptionInfo)
}

inline void DownfileInterruptionInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.hash_){}
    , decltype(_impl_.hasdownloadedsize_){uint64_t{0u}}
    , decltype(_impl_.totalsize_){uint64_t{0u}}
    , decltype(_impl_.isfinish_){false}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DownfileInterruptionInfo::~DownfileInterruptionInfo() {
  // @@protoc_insertion_point(destructor:downfile.interruption.DownfileInterruptionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DownfileInterruptionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.info_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.hash_.Destroy();
}

void DownfileInterruptionInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DownfileInterruptionInfo::InternalSwap(DownfileInterruptionInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata DownfileInterruptionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_downfile_5finterruption_5finfo_2eproto_getter, &descriptor_table_downfile_5finterruption_5finfo_2eproto_once,
      file_level_metadata_downfile_5finterruption_5finfo_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace interruption
}  // namespace downfile
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::downfile::interruption::SingleBlockInfo*
Arena::CreateMaybeMessage< ::downfile::interruption::SingleBlockInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::downfile::interruption::SingleBlockInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::downfile::interruption::DownfileInterruptionInfo*
Arena::CreateMaybeMessage< ::downfile::interruption::DownfileInterruptionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::downfile::interruption::DownfileInterruptionInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
