// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: package_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_package_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_package_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_package_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_package_5fmsg_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_package_5fmsg_2eproto;
namespace msg {
namespace proto {
class PackageMsg;
struct PackageMsgDefaultTypeInternal;
extern PackageMsgDefaultTypeInternal _PackageMsg_default_instance_;
}  // namespace proto
}  // namespace msg
PROTOBUF_NAMESPACE_OPEN
template<> ::msg::proto::PackageMsg* Arena::CreateMaybeMessage<::msg::proto::PackageMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace msg {
namespace proto {

enum MsgType : int {
  Command = 1,
  FileInfos = 2,
  FileDownloadInfo = 3,
  FileDownloadRes = 4
};
bool MsgType_IsValid(int value);
constexpr MsgType MsgType_MIN = Command;
constexpr MsgType MsgType_MAX = FileDownloadRes;
constexpr int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgType_descriptor();
template<typename T>
inline const std::string& MsgType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgType_descriptor(), enum_t_value);
}
inline bool MsgType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class PackageMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.proto.PackageMsg) */ {
 public:
  inline PackageMsg() : PackageMsg(nullptr) {}
  ~PackageMsg() override;
  explicit PROTOBUF_CONSTEXPR PackageMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PackageMsg(const PackageMsg& from);
  PackageMsg(PackageMsg&& from) noexcept
    : PackageMsg() {
    *this = ::std::move(from);
  }

  inline PackageMsg& operator=(const PackageMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageMsg& operator=(PackageMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackageMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackageMsg* internal_default_instance() {
    return reinterpret_cast<const PackageMsg*>(
               &_PackageMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PackageMsg& a, PackageMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(PackageMsg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackageMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PackageMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PackageMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PackageMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PackageMsg& from) {
    PackageMsg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackageMsg* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.proto.PackageMsg";
  }
  protected:
  explicit PackageMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 6,
    kAckFieldNumber = 1,
    kOrderFieldNumber = 2,
    kDataLenFieldNumber = 3,
    kTatolSzieFieldNumber = 4,
    kMsgTypeFieldNumber = 5,
  };
  // required bytes data = 6;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // required uint64 ack = 1;
  bool has_ack() const;
  private:
  bool _internal_has_ack() const;
  public:
  void clear_ack();
  uint64_t ack() const;
  void set_ack(uint64_t value);
  private:
  uint64_t _internal_ack() const;
  void _internal_set_ack(uint64_t value);
  public:

  // required uint32 order = 2;
  bool has_order() const;
  private:
  bool _internal_has_order() const;
  public:
  void clear_order();
  uint32_t order() const;
  void set_order(uint32_t value);
  private:
  uint32_t _internal_order() const;
  void _internal_set_order(uint32_t value);
  public:

  // required uint32 dataLen = 3;
  bool has_datalen() const;
  private:
  bool _internal_has_datalen() const;
  public:
  void clear_datalen();
  uint32_t datalen() const;
  void set_datalen(uint32_t value);
  private:
  uint32_t _internal_datalen() const;
  void _internal_set_datalen(uint32_t value);
  public:

  // required uint32 tatolSzie = 4;
  bool has_tatolszie() const;
  private:
  bool _internal_has_tatolszie() const;
  public:
  void clear_tatolszie();
  uint32_t tatolszie() const;
  void set_tatolszie(uint32_t value);
  private:
  uint32_t _internal_tatolszie() const;
  void _internal_set_tatolszie(uint32_t value);
  public:

  // required .msg.proto.MsgType msgType = 5;
  bool has_msgtype() const;
  private:
  bool _internal_has_msgtype() const;
  public:
  void clear_msgtype();
  ::msg::proto::MsgType msgtype() const;
  void set_msgtype(::msg::proto::MsgType value);
  private:
  ::msg::proto::MsgType _internal_msgtype() const;
  void _internal_set_msgtype(::msg::proto::MsgType value);
  public:

  // @@protoc_insertion_point(class_scope:msg.proto.PackageMsg)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    uint64_t ack_;
    uint32_t order_;
    uint32_t datalen_;
    uint32_t tatolszie_;
    int msgtype_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_package_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PackageMsg

// required uint64 ack = 1;
inline bool PackageMsg::_internal_has_ack() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PackageMsg::has_ack() const {
  return _internal_has_ack();
}
inline void PackageMsg::clear_ack() {
  _impl_.ack_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t PackageMsg::_internal_ack() const {
  return _impl_.ack_;
}
inline uint64_t PackageMsg::ack() const {
  // @@protoc_insertion_point(field_get:msg.proto.PackageMsg.ack)
  return _internal_ack();
}
inline void PackageMsg::_internal_set_ack(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ack_ = value;
}
inline void PackageMsg::set_ack(uint64_t value) {
  _internal_set_ack(value);
  // @@protoc_insertion_point(field_set:msg.proto.PackageMsg.ack)
}

// required uint32 order = 2;
inline bool PackageMsg::_internal_has_order() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PackageMsg::has_order() const {
  return _internal_has_order();
}
inline void PackageMsg::clear_order() {
  _impl_.order_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t PackageMsg::_internal_order() const {
  return _impl_.order_;
}
inline uint32_t PackageMsg::order() const {
  // @@protoc_insertion_point(field_get:msg.proto.PackageMsg.order)
  return _internal_order();
}
inline void PackageMsg::_internal_set_order(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.order_ = value;
}
inline void PackageMsg::set_order(uint32_t value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:msg.proto.PackageMsg.order)
}

// required uint32 dataLen = 3;
inline bool PackageMsg::_internal_has_datalen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PackageMsg::has_datalen() const {
  return _internal_has_datalen();
}
inline void PackageMsg::clear_datalen() {
  _impl_.datalen_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t PackageMsg::_internal_datalen() const {
  return _impl_.datalen_;
}
inline uint32_t PackageMsg::datalen() const {
  // @@protoc_insertion_point(field_get:msg.proto.PackageMsg.dataLen)
  return _internal_datalen();
}
inline void PackageMsg::_internal_set_datalen(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.datalen_ = value;
}
inline void PackageMsg::set_datalen(uint32_t value) {
  _internal_set_datalen(value);
  // @@protoc_insertion_point(field_set:msg.proto.PackageMsg.dataLen)
}

// required uint32 tatolSzie = 4;
inline bool PackageMsg::_internal_has_tatolszie() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PackageMsg::has_tatolszie() const {
  return _internal_has_tatolszie();
}
inline void PackageMsg::clear_tatolszie() {
  _impl_.tatolszie_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline uint32_t PackageMsg::_internal_tatolszie() const {
  return _impl_.tatolszie_;
}
inline uint32_t PackageMsg::tatolszie() const {
  // @@protoc_insertion_point(field_get:msg.proto.PackageMsg.tatolSzie)
  return _internal_tatolszie();
}
inline void PackageMsg::_internal_set_tatolszie(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.tatolszie_ = value;
}
inline void PackageMsg::set_tatolszie(uint32_t value) {
  _internal_set_tatolszie(value);
  // @@protoc_insertion_point(field_set:msg.proto.PackageMsg.tatolSzie)
}

// required .msg.proto.MsgType msgType = 5;
inline bool PackageMsg::_internal_has_msgtype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PackageMsg::has_msgtype() const {
  return _internal_has_msgtype();
}
inline void PackageMsg::clear_msgtype() {
  _impl_.msgtype_ = 1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::msg::proto::MsgType PackageMsg::_internal_msgtype() const {
  return static_cast< ::msg::proto::MsgType >(_impl_.msgtype_);
}
inline ::msg::proto::MsgType PackageMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:msg.proto.PackageMsg.msgType)
  return _internal_msgtype();
}
inline void PackageMsg::_internal_set_msgtype(::msg::proto::MsgType value) {
  assert(::msg::proto::MsgType_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.msgtype_ = value;
}
inline void PackageMsg::set_msgtype(::msg::proto::MsgType value) {
  _internal_set_msgtype(value);
  // @@protoc_insertion_point(field_set:msg.proto.PackageMsg.msgType)
}

// required bytes data = 6;
inline bool PackageMsg::_internal_has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PackageMsg::has_data() const {
  return _internal_has_data();
}
inline void PackageMsg::clear_data() {
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PackageMsg::data() const {
  // @@protoc_insertion_point(field_get:msg.proto.PackageMsg.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PackageMsg::set_data(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:msg.proto.PackageMsg.data)
}
inline std::string* PackageMsg::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:msg.proto.PackageMsg.data)
  return _s;
}
inline const std::string& PackageMsg::_internal_data() const {
  return _impl_.data_.Get();
}
inline void PackageMsg::_internal_set_data(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* PackageMsg::_internal_mutable_data() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_.Mutable(GetArenaForAllocation());
}
inline std::string* PackageMsg::release_data() {
  // @@protoc_insertion_point(field_release:msg.proto.PackageMsg.data)
  if (!_internal_has_data()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.data_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void PackageMsg::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_.SetAllocated(data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:msg.proto.PackageMsg.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace msg

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::msg::proto::MsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::proto::MsgType>() {
  return ::msg::proto::MsgType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_package_5fmsg_2eproto
